October 23:

Task1:

IDLE /pytcharm/Jupyter ===> IDE  3.8 python version
https://www.python.org/downloads/
   

Hackerrank.com ===> Online coding platform
https://www.hackerrank.com/

    
Github.com  ===> version controlled storage

Task2:

variable
data type
data structure
operator
keyword
function inbuilt function

Task3:

Why python is important or famous


October 24:

Task1:

Difference between compiler and Interpreter 

Task2:

rules for creating variable in python

Task3:

difference between python 2 and python 3 version

Task4:

Complex data type in python

Task5:

prime number
factorial
fibonacci series
Armstrong number
odd/even/positive/negative
complex number
palindrome
anagram

October 30:

Task1:

why string is called as global datatype


Task2:

create float ===> convert in to int str bool
create int ==> conver in to float str bool
create bool ===> convert in to float int str
create str ===> convert in to int float bool

#int float bool str

a = 10.00001
print(int(a))

print(bool(a))


October 31:

1. Get radius (int) and height (float) from user using input function
   Find the area of cylinder pi r*r h 
   Print area output in integer with formatted output

2. Area of the circel and circumference:

area pi r * r   cicr  2 pi r
collect radius from user as integer
print area (int) in formatted way
print circumference in string format in formatted way


3: Print function:
Read about print function and its parameters end, sep
Ref: https://www.geeksforgeeks.org/python-output-using-print-function/

4. round function 3.99999 ===> round function
4.98 ===> study about round function
Reference: https://www.w3schools.com/python/ref_func_round.asp



November 6:


String:   "Information_Technology_world"
Tasks: Manual calculation

print(a[0:8])
print(a[0:-8])
print(a[-16:8])
print(a[-16:-8])
print(a[:8])
print(a[:-8])
print(a[9:16])
print(a[9:100])
print(a[9:])
print(a[-7:])
print(a[-7:16])
print(a[-7:100])
print(a[:])
print(a[2:5])
print(a[2:10])
print(a[2:5:1])
print(a[2:10:1])
print(a[-15:-8:1])
print(a[2:5:2])
print(a[2:10:2])
print(a[-15:-8:2])
print(a[2:5:3])
print(a[2:10:3])
print(a[-15:-8:3])
print(a[2:5])
print(a[2:10])
print(a[2:5:1])
print(a[2:10:1])
print(a[-15:-8:1])
print(a[2:5:2])
print(a[2:10:2])
print(a[-15:-8:2])
print(a[2:5:3])
print(a[2:10:3])
print(a[-15:-8:3])
print(a[-14:15:2])
print(a[12:15:1])
print(a[-16:10:5])
print(a[:10:2])
print(a[:-8:3])
print(a[:5:1])
print(a[2::2])
print(a[-10::2])
print(a[12::3])
print(a[13::6])
print(a[10::100])
print(a[2:10:1])
print(a[2:10:-1])
print(a[10:2:1])
print(a[10:2:-1])
print(a[-3:3:3])
print(a[3:-3:3])
print(a[-3:3:-3])
print(a[3:-3:-3])

November 7:

Tasks:

a = "hello_world_python"

print(a[::3])
print(a[::-3])
print(a[2::3])
print(a[3::-3])
print(a[:5:-2])
print(a[:5:5])
print(a[::-1])
print(a[::1])
print(a[::5])
print(a[::-5])

Task2:

"Innovative_minds_python_group"

#[-2:0:-1]
#[5:-5:5]
#[-5:5:-5]
#[5:-5:-5]
#[3:9:-1]
#[9:-10:-2]
#[2:-4:-4]
#[-4:2:-2]
#[0:-1:-3]
#[-3:3:6]
#[::-3]
#[::-2]
#[2:-2:-2]
#[2:-2:2]
#[5:-5:5]
#[3:-3:3]
#[::2]
#[::-5]


Strings:

Task1:
    
#collect one string from user (input)
#identify middle letter of the string

a = "computer"

a = "django"

a = "groovyy"

Task2:
    
Get two strings from user  example: 
    "java" "groovy" ==> java6groovy4
   
   "pi" "mathematics"  ===> pi15mathematics2
    
Task3:
    
    Get one string from user
    
    a = "computer"
    
    convert middle character to upper case
    
    a = "computer" ==> compUter
    groovyy ==> groOvyy
    
Task4:
    
    what's your name ==> hackerrank
    
Task5:
    swapcase
    
Task6:
    Mutation
    
Task7:
    capitalize


November 13: Tasks


Task1

List

#Create an empty list
#Concatenate with [5,6,7,8,10]
#add 8,3,4,4,10,9,1,5,6,7,8,1 elements to that list
#Find frequency of 8 (count) and index of 10
#find the mean of the list
#find sum (List) + min + Max 
#Find median of the list
#remove duplicates from list and give output in the format of tuple
#convert to tuple and set

Tuple

#Create two tuples (1,4,5,6,7,8) (5,6,7,8,9)
#Find the common elements between two tuples
#Concatenate both tuples and remove duplicates from tuple
#Find the index value of 9 (after concatenation)
#multiply above elements 3 times

Sets

#Create two empty sets
#update set1 with 7,8,9,1,2,3,4,5,0
#update set2 with 4,5,6,0
#check whether set2 is subset of set1 or no ?
#check whether both have common elements are no ?
#remove 8 from set 1 and set 2 ==> find the inferences
#discard 0 from set1 and set2 
#find collection of both sets ===> set1 and set2

Dictionary:

#create a dictionary
#{1:["english","maths","science"], 2:[10,20,30], 3:["bio-botany","bio-zoology","Algebra"]}
#Extract "bobtn" from above dictionary
#Extract "arbeg" from above dictionary
#print all keys in dictionary and convert it into tuple
#Find the average of all numbers available under key "2"

Task5

Difference between list tuple set dictionary

Task6:

Study about all data structures and methods in detail (list tuple set dictionary)


Task 7:

a = [1,2,3,4,[100,101,102,"Computer_science"],200,203]

Extract
#science
#computer

Task8

a = [1,2,3,4,[101,102,103,[201,202,[999]], 666, 777]]

Extract
#666
#201
#102
#999
#777


Task9:

Li1 = [2,3,"python","hello",4,5,0]  

Extract
#ll
#thon

Task10
Li1 = [1,2,3,4,5,[11,22,33,44,55,[111,222,333,444],6666,7777],7777]

Output Prediction (manual calculation) 

print(Li1[5][0])
print(Li1[5][6])
print(Li1[5][-2])
print(Li1[5][7])
print(Li1[6])
print(Li1[5][5][1])
print(Li1[-2][-1])
print(Li1[2][2:4])

Pre study topic:  Conditional statements in python



November 20

Task1:

{1:["english","maths","science"], 2:[10,20,30], 3:["bio-botany","bio-zoology","Algebra"]}
#Extract "bobtn" from above dictionary
#Extract "arbeg" from above dictionary
#print all keys in dictionary and convert it into tuple
#Find the average of all numbers available under key "2"

Task2:

{"python":[1994,"interpreter","scripting","development",3], "java":[1992,"compiler","scripts","frontend/backend",10],"c":[1980,"core","scripting","Both",20]}

#extract 3
#Extract 1994
#extract backend
#split this "frontend/backend" with / and itentify index 0
#extract core

Task3:

collect one number from user, check whether the number is positive or negative
collect one number from user, check whether the number is even or odd
collect one string from user, check whether the string is palindrome or not

==============================================================================
If contions Tasks:

November 21 :

Task 1:
collect one number from user, check whether the number is positive or negative

Task2:
collect one number from user, check whether the number is even or odd

Task3:
collect one string from user, check whether the string is palindrome or not

Task4:
#Get one string from user
#extract middle letter of the string
#check whether middle letter is vowel or no

Task5:
#Get one string from user
#Find the middle letter
#find ascii value for the middle letter
#check whether ascii value is odd or even

Task6:
#get one string from user
#check whether length of the string is odd or even

Task7:
#Get one mark from student
#mark 0 to 100 otherwise invalid mark

#50 + PASS otherwise FAIL
#90 to 100 ===> A  ==> Even + Odd -
#80 to 89 ===> B
#70 to 79 ===> C
#60 to 69 ===> D
#50 to 59 ===> E

#0 to 49 ===> FAIL


#93 ===> A-
#99 ===> A-
#88 ====> B+

#78

#VALID MARK
#PASS MARK
#B+

Task8:
#hackerrank Write a function

Task9:
#hackerrank Python If-Else


Task10:
#two strings from user

#mathematics ===> 4 vowels
#science ==> 3 vowels

#both are equal count or not equal


Task11:


#get one integer from user (3 digit int only)
#armstrong or no (without using loops)

#153 ===> 1^3 + 5^3 + 3^3
#370 ===> 3^3 + 7^3 + 0^3
#371 ====> 3^3 + 7^3 + 1^3


Task12:

List #[123, 124, 125,130,131]
length of list odd or even

#References:

#https://www.guru99.com/if-loop-python-conditional-structures.html
#https://realpython.com/python-conditional-statements/
#https://www.w3schools.com/python/python_conditions.asp








